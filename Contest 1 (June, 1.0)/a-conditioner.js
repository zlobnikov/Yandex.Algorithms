// A. Кондиционер

// Ограничение времени	1 секунда
// Ограничение памяти	64Mb
// Ввод	стандартный ввод или input.txt
// Вывод	стандартный вывод или output.txt

// В офисе, где работает программист Петр, установили кондиционер нового типа. 
// Этот кондиционер отличается особой простотой в управлении. У кондиционера 
// есть всего лишь два управляемых параметра: желаемая температура и режим 
// работы.

// Кондиционер может работать в следующих четырех режимах:

// «freeze» — охлаждение. В этом режиме кондиционер может только уменьшать 
// температуру. Если температура в комнате и так не больше желаемой, то он 
// выключается.

// «heat» — нагрев. В этом режиме кондиционер может только увеличивать 
// температуру. Если температура в комнате и так не меньше желаемой, то он 
// выключается.

// «auto» — автоматический режим. В этом режиме кондиционер может как 
// увеличивать, так и уменьшать температуру в комнате до желаемой.

// «fan» — вентиляция. В этом режиме кондиционер осуществляет только вентиляцию 
// воздуха и не изменяет температуру в комнате.

// Кондиционер достаточно мощный, поэтому при настройке на правильный режим 
// работы он за час доводит температуру в комнате до желаемой.

// Требуется написать программу, которая по заданной температуре в комнате 
// troom, установленным на кондиционере желаемой температуре tcond и режиму 
// работы определяет температуру, которая установится в комнате через час.

// Формат ввода

// Первая строка входного файла содержит два целых числа troom, и tcond, 
// разделенных ровно одним пробелом (–50 ≤ troom ≤ 50, –50 ≤ tcond ≤ 50).

// Вторая строка содержит одно слово, записанное строчными буквами латинского 
// алфавита — режим работы кондиционера.

// Формат вывода

// Выходной файл должен содержать одно целое число — температуру, которая 
// установится в комнате через час.

// Пример 1
// Ввод	Вывод
// 10 20   20
// heat

// Пример 2
// Ввод	Вывод
// 10 20   10
// freeze

// Язык: Node.js 14.15.5


function conditioning(data) {
    const settings = data.toString().trim().split('\n');
    const [tRoom, tCond] = settings[0].trim().split(' ').map(n => +n);
    const mode = settings[1].trim();
    
    if (mode === 'fan') return tRoom;
    if (mode === 'heat' && tCond < tRoom) return tRoom;
    if (mode === 'freeze' && tCond > tRoom) return tRoom;

    return tCond;
}

process.stdin.on('data', data => {
    const result = conditioning(data);
    process.stdout.write(result + '');
    process.exit();
});
