// C. Даты

// Ограничение времени           2 секунды
// Ограничение памяти            512Mb
// Ввод                          стандартный ввод или input.txt
// Вывод                         стандартный вывод или output.txt

// Как известно, два наиболее распространённых формата записи даты — это 
// европейский (сначала день, потом месяц, потом год) и американский (сначала 
// месяц, потом день, потом год). Системный администратор поменял дату на одном 
// из бэкапов и сейчас хочет вернуть дату обратно. Но он не проверил, в каком 
// формате дата используется в системе. Может ли он обойтись без этой 
// информации?

// Иначе говоря, вам даётся запись некоторой корректной даты. Требуется 
// выяснить, однозначно ли по этой записи определяется дата даже без 
// дополнительной информации о формате.

// Формат ввода

// Первая строка входных данных содержит три целых числа — x, y и z (1 ≤ x ≤ 31, 
// 1 ≤ y ≤ 31, 1970 ≤ z ≤ 2069. Гарантируется, что хотя бы в одном формате 
// запись xyz задаёт корректную дату.

// Формат вывода

// Выведите 1, если дата определяется однозначно, и 0 в противном случае.

// Пример 1
// Ввод            Вывод
// 1 2 2003        0

// Пример 2
// Ввод            Вывод
// 2 29 2008       1

// Примечания
// В первом примере при одной системе записи дата равна 1 февраля, при другой - 
// 2 января 2003 года, то есть однозначно назвать дату не получается.
// Во втором примере корректный вариант даты может быть только в американском 
// формате, где она задаёт 29 февраля 2008 года.

// Язык: Node.js 14.15.5


function checkDate(data) {
  const [x, y, z] = data.toString().trim().split(/\s+/).map(Number);
  return x <= 12 && y <= 12 && x !== y ? 0 : 1;
}

process.stdin.on('data', data => {
  const result = checkDate(data);
  process.stdout.write(result.toString());
  process.exit();
});
