// B. Последовательно идущие единицы

// Ограничение времени           1 секунда
// Ограничение памяти            64Mb
// Ввод                          стандартный ввод или input.txt
// Вывод                         стандартный вывод или output.txt

// Требуется найти в бинарном векторе самую длинную последовательность единиц и 
// вывести её длину.

// Желательно получить решение, работающее за линейное время и при этом 
// проходящее по входному массиву только один раз.

// Формат ввода

// Первая строка входного файла содержит одно число n, n ≤ 10 000. Каждая из 
// следующих n строк содержит ровно одно число — очередной элемент массива.

// Формат вывода

// Выходной файл должен содержать единственное число — длину самой длинной 
// последовательности единиц во входном массиве.

// Пример
// Ввод            Вывод
// 5               1
// 1
// 0
// 1
// 0
// 1

// Язык: Node.js 14.15.5


function solve(data) {
  const array = data.toString().trim().split(/\s+/).slice(1);

  let maxCount = 0;
  let currentCount = 0;

  array.forEach(v => {
    if (v === '1') {
      ++currentCount;
      maxCount = Math.max(maxCount, currentCount);

    } else {
      currentCount = 0;
    }
  });

  return maxCount;
}

const fs = require('fs');
const content = fs.readFileSync('input.txt', 'utf8');
const result = solve(content);
fs.writeFileSync('output.txt', result + '');
