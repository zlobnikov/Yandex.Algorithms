// E. Чемпионат по метанию коровьих лепешек

// Ограничение времени	    1 секунда
// Ограничение памяти	    64Mb
// Ввод	                    стандартный ввод или input.txt
// Вывод	                стандартный вывод или output.txt

// Ежегодный турнир "Веселый коровяк" - по метанию коровьих лепешек на 
// дальность - прошел 8-9 июля в селе Крылово Осинского района Пермского края.

// Участники соревнований кидают "снаряд" - спрессованный навоз, выбирая его из 
// заранее заготовленной кучи. Желающих поупражняться в силе броска традиционно 
// очень много - как мужчин, так и женщин. Каждую лепешку, которую метнули 
// участники "Веселого коровяка", внимательно осматривали женщины в костюмах 
// коров и тщательно замеряли расстояние.

// Соревнования по метанию коровьих лепешек проводятся в Пермском крае с 2009 
// года.

// К сожалению, после чемпионата потерялись записи с фамилиями участников, 
// остались только записи о длине броска в том порядке, в котором их совершали 
// участники.

// Тракторист Василий помнит три факта:

// 1) Число метров, на которое он метнул лепешку, оканчивалось на 5
// 2) Один из победителей чемпионата метал лепешку до Василия
// 3) Участник, метавший лепешку сразу после Василия, метнул ее на меньшее 
// количество метров

// Будем считать, что участник соревнования занял k-е место, если ровно (k − 1) 
// участников чемпионата метнули лепешку строго дальше, чем он.

// Какое максимально высокое место мог занять Василий?

// Формат ввода

// Первая строка входного файла содержит целое число n — количество участников 
// чемпионата по метанию лепешек (3 ≤ n ≤ 105).

// Вторая строка входного файла содержит n положительных целых чисел, каждое из 
// которых не превышает 1000, — дальность броска участников чемпионата, 
// приведенные в том порядке, в котором происходило метание.

// Формат вывода

// Выведите самое высокое место, которое мог занять тракторист Василий. Если не 
// существует ни одного участника чемпионата, который удовлетворяет, описанным 
// выше условиям, выведите число 0.

// Пример 1
// Ввод	                    Вывод
// 7                        6
// 10 20 15 10 30 5 1

// Пример 2
// Ввод	                    Вывод
// 3                        1
// 15 15 10

// Пример 3
// Ввод	                    Вывод
// 3                        0
// 10 15 20

// Язык: Node.js 14.15.5


function getVasilyPlace(data) {
    let results = data.toString().trim().split('\n')[1].split(' ').map(Number);
    let vasilyPlace = 0;

    let bestResultNumber = getBestResultNumber(results);
    let vasilyResult = getVasilyResult(results.slice(bestResultNumber + 1));

    if (vasilyResult !== -1) {
        vasilyPlace++;

        for (let i of results) {
            if (i > vasilyResult) vasilyPlace++;
        }
    }

    return vasilyPlace;
}

function getBestResultNumber(results) {
    let bestResult = results[0];
    let bestResultNumber = 0;

    for (let i in results) {
        if (results[i] > bestResult) {
            bestResult = results[i];
            bestResultNumber = i;
        }
    }

    return +bestResultNumber;
}

function getVasilyResult(results) {
    let vasilyResult = -1;

    for (let i in results.slice(0, -1)) {
        let distance = results[i];
    
        if (distance > vasilyResult
            && distance % 5 === 0
            && distance % 10 !== 0
            && distance > results[+i + 1]
        ) {
            vasilyResult = distance;
        }
    }

    return vasilyResult;
}

const fs = require('fs');
let fileContent = fs.readFileSync('input.txt', 'utf8');

const result = getVasilyPlace(fileContent);

fs.writeFileSync('output.txt', result.toString());
